"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runner = void 0;
var promises_1 = require("node:fs/promises");
var node_path_1 = require("node:path");
var nx_remotecache_custom_1 = require("nx-remotecache-custom");
var cache_1 = require("@actions/cache");
var cache_2 = require("./cache");
var ACTIONS_PREFIX = 'ACTIONS_';
var isActionsEnvironment = function () {
    return Object.keys(process.env).some(function (key) { return key.startsWith(ACTIONS_PREFIX); });
};
var ensureCacheDirectory = function (path) {
    return (0, promises_1.mkdir)(path, { recursive: true }).then(function () { return path; });
};
exports.runner = (0, nx_remotecache_custom_1.createCustomRunner)(function (options) { return __awaiter(void 0, void 0, void 0, function () {
    var cacheDir, _a, cacheDirectory, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                (0, nx_remotecache_custom_1.initEnv)(options);
                if (!(0, cache_1.isFeatureAvailable)()) {
                    if (!isActionsEnvironment()) {
                        return [2 /*return*/, Promise.reject(new Error('Not running in Actions context, skipping.'))];
                    }
                    else {
                        return [2 /*return*/, Promise.reject(new Error('Failed to detect GitHub Runtime variables. Keep in mind that @actions/cache requires crazy-max/ghaction-github-runtime@v2 to work.'))];
                    }
                }
                return [4 /*yield*/, Promise.resolve().then(function () { return require('@nx/devkit'); })];
            case 1:
                cacheDir = (_c.sent()).cacheDir;
                _a = options // set to cacheDir/remote due to issues with machine id caused by nx not being able to differentiate between local and remote cache
                .cacheDirectory, cacheDirectory = _a === void 0 ? (0, node_path_1.resolve)(cacheDir, 'remote') : _a;
                _b = cache_2.createGithubActionsCache;
                return [4 /*yield*/, ensureCacheDirectory(cacheDirectory)];
            case 2: // set to cacheDir/remote due to issues with machine id caused by nx not being able to differentiate between local and remote cache
            return [2 /*return*/, _b.apply(void 0, [_c.sent()])];
        }
    });
}); });
